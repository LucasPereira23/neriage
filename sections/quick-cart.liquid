{%- if section.settings.enable_quick_cart -%}
  <div
    class="
      quick-cart
      {% if settings.enable_section_animations %}
        animation
        animation--quick-cart
      {% endif %}
    "
    data-section-id="{{ section.id }}"
    data-section-type="quick-cart"
  >
    <div class="quick-cart__wrapper">
      <div class="quick-cart__overlay"></div>
      <div class="quick-cart__container">
        <div class="quick-cart__header">
          <h2 class="quick-cart__heading ff-heading fs-heading-5-base">
            {{ 'cart.general.cart' | t -}}
            {%- if cart.item_count > 0 -%}
              <sup>{{ cart.item_count }}</sup>
            {%- endif %}
          </h2>
          <button
            type="button"
            data-modal-close
            class="quick-cart__close-icon"
            aria-label="{{ 'general.accessibility.close_modal' | t }}"
          >
            {% render 'icon-button', small: true, icon: 'close' %}
          </button>
        </div>

        {%- if cart.item_count > 0 -%}
          <form
            action="{{ routes.cart_url }}"
            method="post"
            data-form
            novalidate
            data-scroll-lock-ignore
            class="quick-cart__form"
          >
            <div class="quick-cart__items animation--quick-cart-items">
              {%- render 'free-shipping-bar' %}

              {%- for item in cart.items -%}
                <div class="quick-cart__item" data-input-item data-id="{{ item.id }}" data-key="{{ item.key }}">
                  <div class="quick-cart__item-image">
                    <a href="{{ item.url }}" class="quick-cart__item-link">
                      {%- render 'image',
                        image: item.image,
                        sizes: '120px',
                        prioritize_loading: true,
                        aspect_ratio: settings.cart_item_aspect_ratio,
                        include_placeholder: true
                      -%}
                    </a>
                  </div>
                  <div class="quick-cart__item-details">
                    <div class="quick-cart__item-top">
                      <h4 class="quick-cart__item-title fs-product-card-title">
                        <a href="{{ item.url }}">{{ item.product.title }}</a>
                      </h4>

                      {% unless item.product.has_only_default_variant %}
                        <p class="quick-cart__item-variant fs-body-60 t-opacity-60">{{ item.variant.title }}</p>
                      {% endunless %}

                      {% if item.selling_plan_allocation %}
                        <p class="quick-cart__item-subscriptions fs-body-60 t-opacity-60">
                          {{ item.selling_plan_allocation.selling_plan.name }}
                        </p>
                      {% endif %}

                      {%- assign property_size = item.properties | size -%}

                      {% if property_size > 0 %}
                        <div class="quick-cart__form-item-properties fs-body-60 t-opacity-80">
                          {% for p in item.properties %}
                            {% # Don't show property if property name begins with an underscore, or if property is blank. %}
                            {% assign first_char = p.first | slice: 0 %}
                            {% unless p.last == blank or first_char == '_' %}
                              <p>
                                {{ p.first }}:

                                {% if p.last contains '/uploads/' %}
                                  <a href="{{ p.last }}">{{ p.last | split: '/' | last }}</a>
                                {% else %}
                                  {{ p.last }}
                                {% endif %}
                              </p>
                            {% endunless %}
                          {% endfor %}
                        </div>
                        <script type="application/json" data-item-properties>
                          {{ item.properties | json }}
                        </script>
                      {% endif %}

                      {% liquid
                        assign price_content_type = 'price'

                        if item.original_price == 0 and settings.zero_dollar_cart_price_display == 'replace'
                          assign price_content_type = 'custom'
                        endif

                        assign item_price = item.original_price
                        assign item_sale_price = blank
                        assign price_tag_type = 'span'

                        if item.original_line_price > item.final_line_price or item.variant.compare_at_price > item.variant.price
                          assign price_tag_type = 's'

                          if item.original_line_price > item.final_line_price
                            assign item_sale_price = item.final_price
                          else
                            assign item_price = item.variant.compare_at_price
                            assign item_sale_price = item.original_price
                          endif
                        endif

                        if section.settings.show_product_currency
                          capture iso_code
                            echo cart.currency.iso_code
                          endcapture
                        endif
                      %}

                      {% # Compare check allows for sale items to properly show instead of being replaced by text %}
                      {% if price_content_type == 'price' or item.variant.compare_at_price > item.original_price %}
                        <div class="quick-cart__item-price-wrapper fs-body-75">
                          <{{ price_tag_type }} class="quick-cart__item-price">
                            {{- item_price | money }}
                            {{ iso_code -}}
                          </{{ price_tag_type }}>

                          {%- if item_sale_price != blank -%}
                            <span class="quick-cart__item-price sale-price">
                              {{- item_sale_price | money }}
                              {{ iso_code -}}
                            </span>
                          {%- endif -%}

                          {% render 'unit-price', item: item %}
                        </div>

                      {% elsif price_content_type == 'custom' %}
                        <div class="quick-cart__item-price-wrapper fs-body-75">
                          <span class="quick-cart__item-price">
                            {{ 'products.inventory.zero_price_custom_label' | t }}
                          </span>
                        </div>
                      {% endif %}

                      {% if item.line_level_discount_allocations.size > 0 %}
                        <ul class="quick-cart__item-discounts">
                          {% for discount_allocation in item.line_level_discount_allocations %}
                            <li class="quick-cart__item-discount fs-body-60">
                              {%- render 'icon', icon: 'discount-badge' -%}
                              {{ discount_allocation.discount_application.title }} (-
                              {{- discount_allocation.amount | money -}}
                              )
                            </li>
                          {% endfor %}
                        </ul>
                      {% endif %}
                    </div>

                    <div class="quick-cart__item-bottom">
                      <p class="quick-cart__item-error fs-body-50 hidden">{{ 'cart.general.error' | t }}</p>

                      {%- if settings.enable_low_inventory_warning -%}
                        {%- liquid
                          assign item_variants = item.product.variants
                          assign item_variant = item_variants | where: 'id', item.id | first
                        -%}

                        {%- if item_variant.inventory_management != blank
                          and item_variant.inventory_policy == 'deny'
                          and item_variant.inventory_quantity < settings.low_inventory_warning_threshold
                        -%}
                          <p class="quick-cart__inventory-warning fs-body-50">
                            {{ 'cart.general.inventory_warning' | t: amount: item_variant.inventory_quantity }}
                          </p>
                        {%- endif -%}
                      {%- endif -%}

                      {% render 'quantity-input', id: item.id, initial_value: item.quantity %}

                      <button
                        type="button"
                        data-remove-item
                        class="quick-cart__item-remove fs-body-75 t-subdued btn btn--text-link"
                      >
                        {{ 'cart.general.remove' | t }}
                      </button>
                    </div>
                  </div>
                </div>
              {%- endfor -%}
              {%- if settings.enable_cross_sells -%}
                {%-
                  render 'cross-sells',
                  cart: cart,
                  cart_items: cart.items,
                  is_slider: true,
                -%}
              {%- endif -%}
            </div>
            <div class="quick-cart__footer animation--quick-cart-footer">
                <div class="quick-cart__footer-inner small-bottom">
                  <div class="cep-calculator__container">
                    <div class="cep-calculator__info">
                      <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M20.734 6.566 12 9.512 3.265 6.566M12 20.376V9.512" stroke="currentColor" stroke-width=".966" stroke-miterlimit="10"/>
                        <path d="m7.854 5.021 8.734 2.946" stroke="currentColor" stroke-width=".872" stroke-miterlimit="10"/>
                        <path d="m12 20.376 8.734-3.678V6.566L12 3.624 3.265 6.566V16.698L12 20.376z" stroke="currentColor" stroke-width=".966" stroke-miterlimit="10"/>
                        <path d="m5.602 9.546 3.67 1.27v2.454l-3.67-1.378V9.546z" stroke="currentColor" stroke-width=".872" stroke-miterlimit="10"/>
                      </svg>
                      <span>{{ 'cep.shipping' | t }}</span>
                    </div>

                    <div class="cep-calculator__form-container">
                      <div class="cep-calculator__form">
                        <input id="cepInput" class="cep-calculator__input" type="text" placeholder="Digite seu CEP" maxlength="9">
                        <button class="cep-calculator__button btn btn--full btn--primary" type="button">
                          <span class="cep-button-label">{{ 'cep.form_button' | t }}</span>
                        </button>
                      </div>
                    </div>

                    <div class="cep-calculator__cep hidden">
                      <div class="cep-calculator__cep-header">
                        <span></span>
                        <button type="button">
                          <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 12 12" fill="none">
                            <path d="M1.04947 0.349823L0.699647 0L0 0.699647L0.349823 1.04947L1.04947 0.349823ZM10.9505 11.6502L11.3004 12L12 11.3004L11.6502 10.9505L10.9505 11.6502ZM11.6502 1.04947L12 0.699647L11.3004 0L10.9505 0.349823L11.6502 1.04947ZM0.349823 10.9505L0 11.3004L0.699647 12L1.04947 11.6502L0.349823 10.9505ZM0.349823 1.04947L5.65018 6.34982L6.34982 5.65018L1.04947 0.349823L0.349823 1.04947ZM6.34982 6.34982L11.6502 1.04947L10.9505 0.349823L5.65018 5.65018L6.34982 6.34982ZM5.65018 5.65018L0.349823 10.9505L1.04947 11.6502L6.34982 6.34982L5.65018 5.65018ZM5.65018 6.34982L10.9505 11.6502L11.6502 10.9505L6.34982 5.65018L5.65018 6.34982Z" fill="black"/>
                          </svg>
                        </button>
                      </div>

                      <div class="cep-calculator__cep-shippings">
                        {% comment %} <div class="cep-calculator__cep-shipping">
                          <span></span>
                        </div>
                        <div class="cep-calculator__cep-range">
                          <span></span>
                        </div>
                        <div class="cep-calculator__cep-price">
                          <span></span>
                        </div> {% endcomment %}
                      </div>

                      <div class="cep-calculator__cep-free">
                        <div class="cep-calculator__cep-shipping">
                          <span>{{ 'cep.pick_up' | t }}</span>
                        </div>
                        <div class="cep-calculator__cep-price">
                          <span>{{ 'cep.free' | t }}</span>
                        </div>
                      </div>
                    </div>

                  </div>
                </div>

                <script>
                  document.addEventListener("DOMContentLoaded", function () {
                    const cepInput = document.querySelector(".cep-calculator__input");
                    const calculateButton = document.querySelector(".cep-calculator__button");
                    const cepFormContainer = document.querySelector(".cep-calculator__form-container");
                    const cepForm = document.querySelector(".cep-calculator__form");
                    const cepResult = document.querySelector(".cep-calculator__cep");
                    const cepShippings = document.querySelector(".cep-calculator__cep-shippings");
                    const cepHeader = document.querySelector(".cep-calculator__cep-header");
                    const cepHeaderText = document.querySelector(".cep-calculator__cep-header span");
                    const buttonLabel = calculateButton.querySelector(".cep-button-label");

                    const form_button = {{ 'cep.form_button' | t | json }};
                    const shipping_by = {{ 'cep.shipping_by' | t | json }};
                    const shipping_up = {{ 'cep.shipping_up' | t | json }};
                    const business_day = {{ 'cep.business_day' | t | json }};
                    const error_fetch = {{ 'cep.error_fetch' | t | json }};
                    const error_general = {{ 'cep.error_general' | t | json }};
                    const error_invalid_cep = {{ 'cep.error_invalid_cep' | t | json }};

                    let errorMessage = document.createElement("p");
                    errorMessage.classList.add("cep-error-message");
                    errorMessage.style.display = "none";
                    cepFormContainer.appendChild(errorMessage);

                    function fetchShippingRates(cep, attempt = 1) {
                      fetch("https://neriage.com.br/cart/prepare_shipping_rates", {
                        method: "POST",
                        headers: { "Content-Type": "application/x-www-form-urlencoded" },
                        body: new URLSearchParams({
                          "shipping_address[zip]": cep,
                          "shipping_address[province]": "São Paulo",
                          "shipping_address[country]": "Brazil",
                        }),
                      })
                        .then(() => fetch("https://neriage.com.br/cart/async_shipping_rates"))
                        .then((response) => response.json())
                        .then((data) => {
                          if (data.shipping_rates && data.shipping_rates.length > 0) {
                            cepForm.classList.add("hidden");
                            cepResult.classList.remove("hidden");
                            cepShippings.innerHTML = "";
                            cepHeaderText.innerHTML = cep;

                            data.shipping_rates.forEach((rate) => {
                              const shippingItem = document.createElement("div");
                              shippingItem.classList.add("cep-calculator__shipping-block");
                              shippingItem.innerHTML = `
                                <p class="cep-calculator__cep-shipping">${shipping_by} ${rate.name}</p>
                                <p class="cep-calculator__cep-range">${shipping_up} ${rate.delivery_days[1]} ${business_day}</p>
                                <p class="cep-calculator__cep-price">R$ ${parseFloat(rate.price).toFixed(2)}</p>
                              `;
                              cepShippings.appendChild(shippingItem);
                            });

                            errorMessage.style.display = "none";
                          } else if (attempt < 3) {
                            console.warn(`Tentativa ${attempt} falhou, tentando novamente...`);
                            setTimeout(() => fetchShippingRates(cep, attempt + 1), 1000);
                          } else {
                            errorMessage.textContent = error_fetch;
                            errorMessage.style.display = "block";
                          }

                          buttonLabel.textContent = form_button;
                        })
                        .catch((error) => {
                          console.error("Erro ao buscar frete:", error);
                          if (attempt < 3) {
                            console.warn(`Tentativa ${attempt} falhou, tentando novamente...`);
                            setTimeout(() => fetchShippingRates(cep, attempt + 1), 1000);
                          } else {
                            errorMessage.textContent = error_general;
                            errorMessage.style.display = "block";
                          }
                          buttonLabel.textContent = form_button;
                        });
                    }

                    calculateButton.addEventListener("click", function () {
                      const cep = cepInput.value.trim();
                      if (!cep) {
                        errorMessage.textContent = error_invalid_cep;
                        errorMessage.style.display = "block";
                        return;
                      }

                      buttonLabel.innerHTML = '<span class="cep-button-loading"></span>';

                      errorMessage.style.display = "none";
                      fetchShippingRates(cep);
                    });

                    cepHeader.addEventListener("click", function () {
                      cepForm.classList.remove("hidden");
                      cepResult.classList.add("hidden");
                      errorMessage.style.display = "none";

                      buttonLabel.textContent = form_button;
                    });

                    document.getElementById('cepInput').addEventListener('input', function (e) {
                      let value = e.target.value.replace(/\D/g, '');
                      if (value.length > 5) {
                        value = value.replace(/^(\d{5})(\d)/, '$1-$2');
                      }
                      e.target.value = value;
                    });
                  });
                </script>

                <div class="quick-cart__footer-inner">
                {%- if settings.show_cart_notes -%}
                  <div class="quick-cart__footer-order-note-wrapper" aria-expanded="false" aria-hidden="true">
                    <button
                      type="button"
                      class="quick-cart__footer-order-note-trigger fs-body-75 btn btn--text-link"
                      data-order-note-trigger
                    >
                      <div class="quick-cart__footer-order-note-trigger-icons">
                        {% render 'icon', icon: 'plus-small' %}
                        {% render 'icon', icon: 'minus-small', class: 'hidden' %}
                      </div>
                      <span class="quick-cart__footer-order-note-trigger-text" data-cart-not-trigger-text>
                        {{ 'cart.general.order_note_button_add' | t }}
                      </span>
                    </button>
                    <div class="quick-cart__footer-order-note-input" cart-note-input>
                      <label for="CartSpecialInstructions" class="fs-body-100">
                        {{- 'cart.general.order_note_label' | t -}}
                      </label>
                      <textarea
                        name="note"
                        id="CartSpecialInstructions"
                        class="input"
                        placeholder="{{ 'cart.general.order_note_placeholder' | t }}"
                      >{{ cart.note }}</textarea>
                    </div>
                  </div>
                {%- endif -%}

                {%- if cart.cart_level_discount_applications.size > 0 -%}
                  <ul class="quick-cart__item-discounts">
                    {% for discount_application in cart.cart_level_discount_applications %}
                      <li class="quick-cart__item-discount fs-body-60">
                        {%- render 'icon', icon: 'discount-badge' -%}
                        {{ discount_application.title }} (-{{ discount_application.total_allocated_amount | money }})
                      </li>
                    {% endfor %}
                  </ul>
                {%- endif -%}

                <div class="quick-cart__footer-subtotal">
                  <h3 class="ff-body fs-body-200">{{ 'cart.general.subtotal' | t }}</h3>
                  <span class="ff-body fs-body-200">
                    {{- cart.total_price | money -}}
                    {% comment %} {%- if section.settings.show_product_currency %} {{ cart.currency.iso_code }}{% endif -%} {% endcomment %}
                  </span>
                </div>
                <p class="quick-cart__footer-tax-note ff-body fs-body-75 t-subdued">
                  {%- if cart.taxes_included and shop.shipping_policy.body != blank -%}
                    {{ 'cart.general.taxes_included_and_shipping_policy_html' | t: link: shop.shipping_policy.url }}
                  {%- elsif cart.taxes_included -%}
                    {{ 'cart.general.taxes_included_but_shipping_at_checkout' | t }}
                  {%- elsif shop.shipping_policy.body != blank -%}
                    {{ 'cart.general.taxes_and_shipping_policy_at_checkout_html' | t: link: shop.shipping_policy.url }}
                  {%- else -%}
                    {{ 'cart.general.taxes_and_shipping_at_checkout' | t }}
                  {%- endif -%}
                </p>

                <button
                  type="submit"
                  name="checkout"
                  class="quick-cart__submit btn btn--full btn--primary"
                  aria-label="{{ 'cart.general.checkout' | t }}"
                >
                  {{ 'cart.general.checkout' | t }}
                </button>
              </div>
            </div>
          </form>
        {%- else -%}
          <div class="quick-cart__empty-state">
            <h3 class="quick-cart__empty-state-heading ff-heading fs-heading fs-heading-4-base">
              {{ 'cart.general.empty' | t }}
            </h3>
            {%- if section.settings.collection_list != blank -%}
              {%- if section.settings.promotion_text != blank -%}
                <div class="quick-cart__empty-state-promot-text rte ff-body fs-body-100">
                  {{ section.settings.promotion_text }}
                </div>
              {%- endif -%}
              {%- for collection in section.settings.collection_list -%}
                {%-
                  render 'button-block',
                  wrapper_class: "quick-cart__empty-state-promo-button",
                  link: collection.url,
                  label: collection.title,
                  button_style: section.settings.collection_list_button_style,
                  button_alignment: 'center',
                -%}
              {%- endfor -%}
            {%- else -%}
              {%- assign empty_label = 'cart.general.continue_shopping' | t -%}
              {%- render 'button-block',
                wrapper_class: 'quick-cart__empty-state-promo-button',
                link: routes.collections_url,
                label: empty_label,
                button_style: 'btn--secondary',
                button_alignment: 'center'
              -%}
            {%- endif -%}
          </div>
        {%- endif -%}
      </div>
    </div>
  </div>
{%- endif -%}


{% schema %}
{
  "name": "t:sections.quick_cart.name",
  "settings": [
    {
      "id": "enable_quick_cart",
      "type": "checkbox",
      "label": "t:sections.quick_cart.settings.enable_quick_cart.label",
      "info": "t:sections.quick_cart.settings.enable_quick_cart.info",
      "default": true
    },
    {
      "type": "header",
      "content": "t:sections.quick_cart.settings.header__product.content"
    },
    {
      "id": "show_product_currency",
      "type": "checkbox",
      "label": "t:sections.quick_cart.settings.show_product_currency.label",
      "default": true
    },
    {
      "type": "header",
      "content": "t:sections.quick_cart.settings.header__promotion.content"
    },
    {
      "type": "richtext",
      "id": "promotion_text",
      "label": "t:sections.quick_cart.settings.promotion_text.label",
      "default": "<p>Check out these collections.</p>"
    },
    {
      "id": "collection_list",
      "type": "collection_list",
      "label": "t:sections.quick_cart.settings.collection_list.label"
    },
    {
      "type": "select",
      "id": "collection_list_button_style",
      "label": "t:sections.quick_cart.settings.collection_list_button_style.label",
      "default": "btn--secondary",
      "options": [
        {
          "value": "btn--primary",
          "label": "t:shared.settings.button_style.option_solid"
        },
        {
          "value": "btn--secondary",
          "label": "t:shared.settings.button_style.option_outline"
        }
      ]
    }
  ]
}
{% endschema %}
